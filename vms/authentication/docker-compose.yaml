---
name: authentication

services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    container_name: authentik-postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    secrets:
      - postgres_password
    networks:
      - backend
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER=authentik-prod-1-admin
      - POSTGRES_DB=authentik-prod-1-db
  redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
  server:
    image: ghcr.io/goauthentik/server:2025.6.3
    restart: unless-stopped
    container_name: authentik-server
    networks:
      - backend
      - frontend
    command: server
    environment:
      - AUTHENTIK_SECRET_KEY=file:///run/secrets/authentik_secret_key
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=authentik-prod-1-admin
      - AUTHENTIK_POSTGRESQL__NAME=authentik-prod-1-db
      - AUTHENTIK_POSTGRESQL__PASSWORD=file:///run/secrets/authentik_postgressql__password
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    secrets:
      - authentik_secret_key
      - authentik_postgressql__password
      - postgres_password
    ports:
      - 9000:9000 
      - 9443:9443 
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
  worker:
    image: ghcr.io/goauthentik/server:2025.6.3
    container_name: authentik-worker
    restart: unless-stopped
    networks:
      - backend
    command: worker
    secrets: 
      - authentik_secret_key
      - postgres_password
    environment:
      - AUTHENTIK_SECRET_KEY=file:///run/secrets/authentik_secret_key
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=authentik-prod-1-admin
      - AUTHENTIK_POSTGRESQL__NAME=authentik-prod-1-db
      - AUTHENTIK_POSTGRESQL__PASSWORD=file:///run/secrets/postgres_password
    user: root
    volumes:
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy

secrets:
  authentik_secret_key:
    file: ./secrets/authentik_secret_key.txt
  authentik_postgressql__password:
    file: ./secrets/authentik_postgressql__password.txt
  postgres_password:
    file: ./secrets/postgres_password.txt


volumes:
  database:
    driver: local
  redis:
    driver: local

networks:
  frontend:
    external: true
  backend:
    external: true
